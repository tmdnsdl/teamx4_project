drop table teamx4_member;
create table teamx4_member(
user_num varchar2(20) primary key, 
user_name varchar2(20), 
user_image varchar2(200),
user_email varchar2(30),
user_gender varchar2(10),
user_type number,
user_review_list varchar2(200),
user_like_list varchar2(200),
user_diningName varchar2(60),
user_diningAddr varchar2(100),
user_diningReg varchar2(100),
user_diningHp varchar2(30)
);

		  
1. 메인페이지에서 로그인 클릭
- Kakao.Auth.getAccessToken() 으로 토큰발급여부 확인 후(토큰이 발급되었으면 로그인 한 상태)
  로그인 상태면 ㅇㅇㅇ님 로그아웃으로 표시 / 로그인이 안되있으면 로그인 페이지로 이동
2. 로그인 화면 
2-1. 일반 로그인(카카오계정으로 로그인)
2-2. 카카오 로그인 후 Member테이블에 등록이 되어있으면 바로 로그인
2-3. 카카오 로그인 후 Member테이블에 등록이 안되어있으면 회원가입 처리(DB에 등록) 후 로그인
2-4. 로그인 시 DB 테이블의 user_num(primary key) session 설정(정보 수정 및 활동 내역-좋아요, 리뷰-에 사용)
2-5. 메인페이지에서 회원명/마이페이지 클릭 시 정보 수정(DB 테이블 정보 수정)
2-6. 메인페이지에서 로그아웃 클릭 시 로그아웃(카카오 로그아웃-AccessToken을 없앰 / session 삭제)

3-1. 사업자 회원가입 처리
3-2. 카카오 로그인 후 Member테이블에 등록이 되어있으면 바로 로그인
3-3. 카카오 로그인 후 Member테이블에 등록이 안되어있으면 회원가입 처리(DB에 등록) 후 로그인
3-4. 로그인 시 DB 테이블의 user_num(primary key) session 설정
3-5. 로그인 처리 후 사업자 등록 페이지로 이동
- 사업자 등록 페이지로 이동 시 user_type 체크하여 이미 사업자 등록이 된 경우 메인 페이지로
3-6. 사업자 등록 페이지에서 정보 입력 후 submit
3-7. DB 테이블에 사업자 정보 등록 및 user_type:1로 사업자 구분 정보 변경
3-8. 메인페이지에서 회원명 클릭 시 정보 수정(DB 테이블 정보 수정)
3-9. 메인페이지에서 로그아웃 클릭 시 로그아웃(카카오 로그아웃-AccessToken을 없앰 / session.invalidate())
  
4. 즐겨찾기(좋아요) 페이지
4-1. DB 좋아요 리스트 칼럼을 구분자(,)로 배열 처리
 - 1,2,3,4,5를 {1,2,3,4,5}로 배열 처리
4-2. 배열 값을 DAO 에서 처리
4-3. 동적 쿼리 작업으로 일부 데이터만 List로 추출
 - select * from tablename where column in (1,3,5,6);
 - <foreach collection="array" item="item" separator="," open="(" close=")">
		#{item}
	</foreach>
4-4. List를 받아서 좋아요 리스트 페이지로 이동
4-5. 한페이지에 5개의 데이터 씩 표시
4-6. 데이터 삭제는 해당 가게의 restNum을 ajax로 넘겨서 처리
 - ajax로 restNum을 Controller 로 넘긴다
 - 세션 유저 Bean 데이터를 불러온다
 - 유저의 좋아요 리스트를 가져와서 구분자(,)로 배열 처리 한다
 - 배열 처리 된 좋아요 리스트에서 restNum 값을 삭제하기 위해 ArrayList로 변환한다
 - ArrayList에서 restNum 값에 해당하는 데이터를 삭제한다(remove)
 - 삭제 처리 된 ArrayList를 일반 배열로 다시 변경한다
 - 배열을 구분자(,)로 String으로 변경하여 DAO에서 좋아요 리스트 칼럼을 업데이트 한다  
 
5. 마이리뷰 페이지
4-1. DB 리뷰 리스트 칼럼을 구분자(,)로 배열 처리
 - 1,2,3,4,5를 {1,2,3,4,5}로 배열 처리
4-2. 배열 값을 DAO 에서 처리
4-3. 동적 쿼리 작업으로 일부 데이터만 List로 추출
 - select * from tablename where column in (1,3,5,6);
 - <foreach collection="array" item="item" separator="," open="(" close=")">
		#{item}
	</foreach>
4-4. List를 받아서 마이리뷰 리스트 페이지로 이동
4-5. 한페이지에 5개의 데이터 씩 표시
4-6. 데이터 삭제는 해당 리뷰의 reviewNum을 ajax로 넘겨서 처리
 - ajax로 reviewNum을 Controller 로 넘긴다
 - 세션 유저 Bean 데이터를 불러온다
 - 유저의 리뷰 리스트를 가져와서 구분자(,)로 배열 처리 한다
 - 배열 처리 된 좋아요 리스트에서 reviewNum 값을 삭제하기 위해 ArrayList로 변환한다
 - ArrayList에서 reviewNum 값에 해당하는 데이터를 삭제한다(remove)
 - 삭제 처리 된 ArrayList를 일반 배열로 다시 변경한다
 - 배열을 구분자(,)로 String으로 변경하여 DAO에서 리뷰 리스트 칼럼을 업데이트 한다
 - reviewNum 값에 해당하는 리뷰를 DAO에서 삭제한다(리뷰 테이블 DB 칼럼 삭제)
 

6. Member 테이블에 좋아요 칼럼 업데이트하기
5-1. /updateLikelist.lo로 맵핑 되는 updateLikelist에서 좋아요 리스트 처리
5-2. 넘겨줘야 되는 가게 정보(PK)는 user_like_num으로 name 설정(RequestParam)
5-3. user_like_num을 받아서 현재 세션 설정 되어있는 아이디에 좋아요 리스트 칼럼에 업데이트
 - 유저의 기존 좋아요 리스트에 구분자(,) + user_like_num을 추가 한 후 bean에 새로운 데이터 setter로 넣음
 - bean을 DAO의 updateLikelist로 보내서 DB 좋아요 리스트 칼럼에 업데이트
5-4. 위의 항목을 참고하여 ajax로 처리  
